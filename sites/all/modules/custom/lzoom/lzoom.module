<?php
/**
* Implements hook_menu().
*/
function lzoom_menu() {
  $items['lzoom-test'] = array(
    'title' => " ",
    'description' => 'Test using Locus Zoom',
    'page callback' => 'lzoom_test',
    'access callback' => TRUE,
  );
  $items['lzoom'] = array(
    'title' => " ",
    'description' => 'Locus Zoom plot',
    'page callback' => 'lzoom_viz',
    'access callback' => TRUE,
  );
    $items['lzoom-input'] = array(
    'title' => 'Enter Locus Zoom inputs',
    'description' => 'Input genes to view Locus Zoom GWAS visualization',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lzoom_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['lzoom-data'] = array(
    'title' => " ",
    'description' => 'Locus Zoom Post',
    'page callback' => 'lzoom_post',
    'access callback' => TRUE,
  );


  return $items;
}

function lzoom_libraries_info() {
  $libraries = array();
  $libraries['locuszoom'] = array(
    'name' => 'Locus Zoom',
    'vendor url' => 'http://locuszoom.sph.umich.edu/',
    'download url' => 'https://github.com/statgen/locuszoom',
    'version callback' => '_short_circuit_version',
    'files' => array(
      'js' => array(
        'locuszoom.vendor.min.js',
        'locuszoom.app.js',
      ),
      'css' => array(
        'locuszoom.css'
      ),
    ),
  );

  return $libraries;
}

function lzoom_test() {
  $path = libraries_get_path('locuszoom');
  libraries_load('locuszoom');
  drupal_add_js($path . '/locuszoom.vendor.min.js');
  drupal_add_js($path . '/locuszoom.app.js');
  drupal_add_js($path . '/assets/js/vendor/d3.min.js');
  drupal_add_css($path . '/locuszoom.css');


  //$test = $path . '/index.html';

  $test = file_get_contents($path . '/igap_stage1.html');
  //$test = file_get_contents($path . '/index_drupal.html');

  //$page_text = "<p>Locus Zoom page</p><p></p>" . $path . "<p></p><p></p>";

  return ($test);

}

/**
* Short-circuit the version argument.
*/
function _short_circuit_version() {
  return TRUE;
}


function lzoom_post() {

  $full_url = "https://portaldev.sph.umich.edu/api/v1/annotation/genes/?filter=source%20in%202%20and%20chrom%20eq%20%2710%27%20and%20start%20le%20115058349%20and%20end%20ge%20114458349";

  $my_test = drupal_http_request($full_url);
  $data = $my_test->data;

  //dsm($data);

  $lzoom_url = $GLOBALS['base_url'] . "/lzoom-data/results";

//http://localhost:8888/lzoom-data/results/?filter=analysis in 3 and chromosome in  '10' and position ge 114550452 and position le 115067678

  $filter_string = "analysis in 3 and chromosome in '10' and position ge 114550452 and position le 115067678";

  $post_url = url( $lzoom_url, array('absolute' => TRUE,
                                   'query' => array('filter' => $filter_string)));

  $options = array(
                  'method' => 'POST',
                  'data' => $data,
                  'timeout' => 15,
                  'headers' => array('Content-Type' => 'application/json', 'Accept' => 'application/json'),
          );

  //$result = drupal_http_request($post_url, $options);

  return drupal_json_output($data);

}


function lzoom_viz() {

  $result = _query_mongo_lzoom();

  $chart = array(
        'id' => 'plot',
        'type' => 'lzoom',
        'gene' => $result,
        'study' => $result,
      );

    return d3_draw($chart);
}


function _query_mongo_lzoom() {
  //return javascript object
  $test = array();
  return $test;
}


function lzoom_theme() {
    $path = drupal_get_path('module', 'lzoom');
    return array(
        'lzoom' => array('template' => 'lzoom', 'path' => $path),
    );
}

function lzoom_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module', 'lzoom');
  // Override the content type summary info.
    //dsm($theme_registry);
  if (isset($theme_registry['d3']['template'])) {
    //dsm($theme_registry['d3']);
    $theme_registry['d3']['template'] = $path . '/lzoom';
    //dsm($theme_registry['d3']);
  }
}

function lzoom_form($form, &$form_state) {

  // Header
  $form['header'] = array(
    '#markup' => '<p>Visualize GWAS results in Locus Zoom by choosing a gene and a study.</p>'
  );


  $form['input_gene'] = array (
    '#type' => 'textfield',
    '#title' => t('Gene Symbol'),
    '#default_value' => '',
    '#description' => t('Please enter a gene symbol'),
    '#size' => 20,
  );

  $study_list = array('IGAP' => 'IGAP GWAS',
                      'METAL' => 'METAL GWAS');

  $form['study'] = array(
       '#type' => 'select',
       '#title' => t('Study'),
       '#options' => array(0 => t('- Select -')) + $study_list,
       '#default_value' =>  0,
       '#description' => t('Please select the study'),
   );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

	return $form;
}

/**
 * Implementation of hook_validate() for the lzoom_input.
 */

function lzoom_form_validate($form, & $form_state) {
	 $valid_gene = $form_state['values']['input_gene'];

}

function lzoom_form_submit($form, & $form_state) {
	$valid_gene = $form_state['values']['input_gene'];

	drupal_set_message(t('Your gene is %gene.', array('%gene' => $valid_gene)));
	//return drupal_render(drupal_get_form('lzoom_form'));

	$form_state['redirect'] = 'lzoom/' . $valid_gene;
}


?>
